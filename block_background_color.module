<?php

/**
 * @file
 * Enhanced control over the Background Color of any Block.
 *
 * Block Background Color allows users to set background color to
 * any block through the block's configuration interface.
 */

/**
 * Implements hook_permission().
 */
function block_background_color_permission() {
  return array(
    'administer block background color' => array(
      'title' => t('Administer block background color'),
      'description' => t('Set background color for blocks.'),
    ),
  );
}

/**
 * Implements hook_config_info().
 */
function block_background_color_config_info() {
  $prefixes['block_background_color.settings'] = array(
    'label' => t('Block Background Color settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements theme_preprocess_block().
 *
 * Extend block's background color with any user defined Bg color.
 */
function block_background_color_preprocess_block(&$variables) {
  $block = $variables['block'];
  $block_id = str_replace('-', '_', $block->module . '_' . $block->delta);
  $block_delta = str_replace('_', '-', $block_id);
  $bbc_data = config_get('block_background_color.settings', 'block_background_color');
  if (!empty($bbc_data) && isset($bbc_data[$block_id])) {
    $color = $bbc_data[$block_id];
    backdrop_add_css('.block-' . $block_delta . ' { background-color:' . $color . '!important; }', array('type'=>'inline'));
  }
}

/**
 * Implements hook_form_alter().
 *
 * Alter block edit form to add configuration field.
 */
function block_background_color_form_alter(&$form, &$form_state, $form_id) {
  if (user_access('administer block background') && ($form_id == 'layout_block_configure_form')) {


    $block = $form_state['block'];
    $block_delta =  $block->module .'_'. $form_state['block']->delta;
    $block_delta = str_replace('-', '_', $block_delta);

    $bbc_data = config_get('block_background_color.settings', 'block_background_color');
    $bbc = isset($bbc_data[$block_delta]) ? $bbc_data[$block_delta] : '';
    $form['block_background_color'] = array(
      '#type' => 'color',
      '#title' => t('Background Color'),
      '#default_value' => !empty($bbc) ? $bbc : '',
    );
    $form['#submit'][] = 'block_background_color_form_submit';
  }
}

/**
 * Helper function: additional submit callback for block configuration pages.
 *
 * Save supplied hex color value.
 */
function block_background_color_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  if ($form_state['values']['form_id'] == 'layout_block_configure_form') {
    // Only save if value has changed.
    if (isset($form_state['values']['block_background_color'])) {
      $block = $form_state['block'];
      $block_delta =  $block->module .'_'. $form_state['block']->delta;
      $block_delta = str_replace('-', '_', $block_delta);
      $color = $values['block_background_color'];
      $bbc_data = config_get('block_background_color.settings', 'block_background_color');
      if (!empty($color)) {
        $bbc_data[$block_delta] = $color;
      }
      elseif (isset($bbc_data[$block_delta])){
        unset($bbc_data[$block_delta]);
      }
      config_set('block_background_color.settings', 'block_background_color', $bbc_data);
    }
  }
}
